<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.vote.dao.ActionRoleMapper" >
  <resultMap id="BaseResultMap" type="com.vote.pojo.ActionRole" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="role_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="is_admin" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="description" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, role_name, is_admin, create_time, description
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from action_role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from action_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.vote.pojo.ActionRole" >
    insert into action_role (id, role_name, is_admin, 
      create_time, description)
    values (#{id,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR}, #{isAdmin,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{description,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.vote.pojo.ActionRole" >
    insert into action_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="roleName != null" >
        role_name,
      </if>
      <if test="isAdmin != null" >
        is_admin,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="description != null" >
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="roleName != null" >
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="isAdmin != null" >
        #{isAdmin,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.vote.pojo.ActionRole" >
    update action_role
    <set >
      <if test="roleName != null" >
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="isAdmin != null" >
        is_admin = #{isAdmin,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.vote.pojo.ActionRole" >
    update action_role
    set role_name = #{roleName,jdbcType=VARCHAR},
      is_admin = #{isAdmin,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      description = #{description,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!-- 角色列表查询 sql -->
  <select id="queryRoleList" parameterType="com.vote.pojo.vo.ActionRoleVO"
          resultType="com.vote.pojo.ActionRole">
    select
    <include refid="Base_Column_List"/>
    from action_role
    order by id asc
  </select>

  <!-- 获取单个详细信息 -->
  <select id="roleEdit" resultType="com.vote.pojo.ActionRole" parameterType="int">
    select
    <include refid="Base_Column_List"/>
    from action_role where id = #{id}
  </select>

  <!-- 修改保存信息 -->
  <update id="roleEditOk" parameterType="com.vote.pojo.ActionRole">
    update action_role set
    role_name = #{roleName},
    is_admin = #{isAdmin},
    create_time = #{createTime},
    description = #{description}
    where
    id = #{id}
  </update>
  <!-- 角色信息删除 -->
  <delete id="roleDelete"  parameterType="int">
    delete  from action_role where id=#{id}
  </delete>

  <!-- 角色新增 sql -->
  <insert id="roleAdd" parameterType="com.vote.pojo.ActionRole">
    insert into action_role
    (
    role_name,
    is_admin,
    create_time,
    description
    )
    values
    (
    #{roleName},
    #{isAdmin},
    #{createTime},
    #{description}
    )
  </insert>

  <!-- 分配角色__查询全部角色信息 sql -->
  <select id="selectRoleList" parameterType="int" resultType="com.vote.pojo.ActionRole">
    select
    <include refid="Base_Column_List"/>
    from action_role where is_admin = #{isAdmin}
  </select>

</mapper>